rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isFaculty() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'faculty';
    }
    
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isAdmin() || isOwner(userId);
    }

    match /counters/projects {
      allow read: if isSignedIn();
      allow write: if isFaculty() && (
        (resource == null && request.resource.data.count >= 1) ||
        (resource != null && request.resource.data.count == resource.data.count + 1)
      );
    }
    
    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create: if isFaculty();

      // Admin can update anything.
      // Faculty (PI) can only update the 'grant' field under specific conditions.
      allow update: if isAdmin() || (
        isOwner(resource.data.pi_uid) &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['grant']) &&
        (
          // Case 1: Submitting bank details
          (
            resource.data.grant.status == 'Pending Bank Details' &&
            request.resource.data.grant.status == 'Bank Details Submitted'
          ) ||
          // Case 2: Adding transactions or submitting utilization report when status is Disbursed
          (
            resource.data.grant.status == 'Disbursed'
          )
        )
      );
    }
    
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.uid);
      allow create: if isAdmin();
    }
  }
}
