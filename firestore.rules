
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Anyone can read individual user profiles (for public profile pages).
    // - Users can create their own profile.
    // - Users can update their own profile, admins can update any profile.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'Super-admin', 'CRO']);
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'Super-admin'];
    }

    // Projects Collection
    // - Any authenticated user can read projects.
    // - Users can only create projects for themselves.
    // - PIs and admins can update projects.
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.pi_uid;
      allow update: if request.auth != null && (resource.data.pi_uid == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'Super-admin', 'CRO']);

      // Evaluations Subcollection
      // - Users can only read/write their own evaluation.
      match /evaluations/{evaluatorId} {
        allow read, write: if request.auth.uid == evaluatorId;
      }
    }

    // Notifications Collection
    // - A user can read/update their own notifications.
    // - Creation is server-side only.
    match /notifications/{notificationId} {
      allow read, update: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create: if false;
    }

    // Incentive Claims Collection
    // - Users can create and read their own claims.
    // - Admins/CROs can read and update all claims.
    match /incentiveClaims/{claimId} {
      allow create: if request.auth.uid == request.resource.data.uid;
      allow read: if request.auth != null && (resource.data.uid == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super-admin', 'CRO']);
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Super-admin', 'CRO'];
    }
  }
}
